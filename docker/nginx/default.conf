# --- Captura todo lo que no coincide y cierra conexión ---
server {
    listen 80 default_server;
    server_name _;  # nombre comodín que nunca coincide con tu dominio
    return 444;
}

server {
    listen 443 ssl default_server;
    server_name _;
    ssl_certificate     /app/ssl.crt;
    ssl_certificate_key /app/ssl.key;
    return 444;
}


server {
    listen       80;
    server_name  www.siempreverde.software siempreverde.software;

    if ($host !~* ^(siempreverde\.software|www\.siempreverde\.software)$) {
        return 444;
    }

    return 301   https://$host$request_uri;
 }

server {
    listen       443 ssl;
    server_name  www.siempreverde.software siempreverde.software;

    ssl_certificate      /app/ssl.crt;
    ssl_certificate_key  /app/ssl.key;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Cabeceras de seguridad esenciales
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

    # Content Security Policy (CSP) - Protección moderna contra XSS/data injection
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https:; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self'; connect-src 'self'; frame-src 'none'; object-src 'none'; base-uri 'self'; form-action 'self';" always;

    # Opcional: Cabecera obsoleta para compatibilidad con navegadores antiguos (IE)
    # add_header X-XSS-Protection "1; mode=block" always;

    if ($host !~* ^(siempreverde\.software|www\.siempreverde\.software)$) {
        return 444;
    }

    location ~* /(phpmyadmin|wp-login|xmlrpc|.env) {
        deny all;
    }

    # Manejar favicon.ico explícitamente
    location = /favicon.ico {
        root /usr/share/nginx/html;
        try_files /favicon.ico =204;
        access_log off;
        log_not_found off;
    }

    location / {
        proxy_pass http://web:8000/;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /static/ {
        alias /app/staticfiles/;

        # Habilitar caché para archivos estáticos
        expires 30d;
        access_log off;
        add_header Cache-Control "public, no-transform";

        # Precompresión de archivos estáticos
        gzip_static on;
    }
}
